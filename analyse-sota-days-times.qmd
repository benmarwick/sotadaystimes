---
title: "When do you activate? When do I have the best chance of a S2S?"
date: now
format: html
---

```{r}
library(httr2)
library(tidyverse)
library(sf)
library(lutz)
library(hms)

req <- request("https://api2.sota.org.uk/api/")

# get 1000 or so of the most recent spots
# https://api2.sota.org.uk/docs/index.html
# "The parameter limit is an integer which when unsigned 
# defines the number of spots to retrieve (max 200)
#  and when signed, the number of hours' worth of 
# Spots (max 72 hours)"
resp_spot <- req %>% 
  req_url_path_append("spots") %>% 
  req_url_path_append("-72") %>% 
  # Add query parameters 
  req_url_query(
                `filter` = "all") %>% 
  req_perform() %>% 
  resp_body_json() 
```


```{r}
# get associations so we can get their time zones via lat-long
resp_assoc <- req %>% 
  req_url_path_append("associations") %>% 
  req_perform() %>% 
  resp_body_json() 
```


```{r}
assoc_tbl <- 
resp_assoc %>% 
  tibble(resp = resp_assoc) %>% 
  unnest_wider(resp) 

# find the timezones for each association
assoc_tbl_tz <- 
  assoc_tbl %>% 
  mutate(activeFrom = str_replace_all(activeFrom, "T", " ")) %>% 
  mutate(date = as_datetime(activeFrom, 
                            format = "%Y-%m-%d %H:%M:%S", 
                            tz = "GMT"),
         timezone = tz_lookup_coords(lat = minLat, 
                                     lon = minLong, 
                                     method = "accurate")) 

# are all timezones in the set available at my locale?
zz <- unique(assoc_tbl_tz$timezone)
cbind(zz ,(zz %in% OlsonNames()))

spot_tbl <- 
resp_spot %>% 
  tibble(resp_spot = resp_spot) %>% 
  unnest_wider(resp_spot) %>% 
  select(-.)
```


```{r}

# find the time zone for each spot, via the association that the spot is in
spot_tbl_tz <- 
spot_tbl %>% 
  left_join(assoc_tbl_tz %>% 
              select(associationCode, 
                     associationName,
                     timezone),
            join_by("associationCode")) %>% 
  mutate(timeStamp = str_replace_all(timeStamp, "T", " ")) %>% 
  mutate(timeStamp1 = as_datetime(timeStamp, 
                                format = "%Y-%m-%d %H:%M:%OS", 
                                tz = "GMT")) 

range(spot_tbl_tz$timeStamp1)

# convert UTC times from the API to local times
# we cannot have multiple time zones in one vector
# so this stays as a list
tzs <- vector("list", length = nrow(spot_tbl_tz))
for(i in 1:nrow(spot_tbl_tz)){
  tzs[[i]] <- with_tz(spot_tbl_tz$timeStamp1[i], 
                      tzone = spot_tbl_tz$timezone[i])
}

# convert time to HMS only, get weekdays
days.of.week <- weekdays(as.Date(4,"1970-01-01",tz="GMT")+0:6)
spot_tbl_tz_local <- 
  spot_tbl_tz %>% 
  mutate(local_time = map_vec(tzs,  ~as_hms(.x))) %>% 
  mutate(day_of_the_week = map_vec(tzs,  ~weekdays(.x)))  %>% 
  mutate(day_of_the_week = factor(day_of_the_week,
                                  levels = days.of.week))

# 50% of spots occur between these local times
fifty_perc <- quantile(spot_tbl_tz_local$local_time, c(0.25,  0.75))
```

```{r}

# plot all in one histogram
spot_tbl_tz_local  %>% 
  ggplot() +
  aes(day_of_the_week) +
  geom_bar() +
  scale_x_discrete(drop = FALSE) +
  theme_minimal() +
  ggtitle("All spots on all modes in all Associations")
```


```{r}
spot_tbl_tz_local  %>% 
  ggplot() +
  aes(local_time) +
  geom_histogram() +
  geom_vline(xintercept = fifty_perc, colour = "red") +
  theme_minimal() +
  xlab("Local time\n50% of spots occur between the red lines") +
  ggtitle("All spots on all modes in all Associations")

```

```{r}
# plot all in one histogram
spot_tbl_tz_local  %>% 
ggplot() +
  aes(local_time) +
  geom_histogram() +
  geom_vline(xintercept = fifty_perc, colour = "red") +
  theme_minimal() +
  facet_wrap(~ day_of_the_week, scales = "free_y") +
  xlab("Local time\n50% of spots occur between the red lines") +
  ggtitle("All spots on all modes in all Associations")
```

```{r}
spot_tbl_tz_local %>% 
  add_count(associationName) %>% 
  filter(n >= 10) %>% 
  ggplot() +
  aes(local_time) +
  geom_histogram() +
  geom_vline(xintercept = fifty_perc, colour = "red") +
  theme_minimal() +
  xlab("Local time\n50% of spots occur between the red lines") +
  facet_wrap(~ associationName, scales = "free_y") +
  ggtitle("Spots by Association (for Assocs with more than 10 spots)")
```


```{r}
spot_tbl_tz_local  %>% 
  mutate(mode = toupper(mode)) %>% 
  add_count(mode) %>% 
  filter(n >= 10) %>% 
  ggplot() +
  aes(local_time) +
  geom_histogram() +
  geom_vline(xintercept = fifty_perc, colour = "red") +
  theme_minimal() +
  xlab("Local time\n50% of spots occur between the red lines") +
  facet_wrap(~ mode, scales = "free_y") +
  ggtitle("Spots by Mode (for Modes with more than 10 spots)")
```

```{r}
spot_tbl_tz_local %>% 
  add_count(summitCode) %>% 
  filter(n >= 10) %>% 
  ggplot() +
  aes(local_time) +
  geom_histogram() +
  geom_vline(xintercept = fifty_perc, colour = "red") +
  theme_minimal() +
  xlab("Local time\n50% of spots occur between the red lines") +
  facet_wrap(~ summitCode, scales = "free_y")
```

```{r}
spot_tbl_tz_local %>% 
  add_count(activatorCallsign) %>% 
  filter(n >= 10) %>% 
  ggplot() +
  aes(local_time) +
  geom_histogram() +
  geom_vline(xintercept = fifty_perc, colour = "red") +
  theme_minimal() +
  xlab("Local time\n50% of spots occur between the red lines") +
  facet_wrap(~ activatorCallsign, scales = "free_y") +
  ggtitle("Spots by Activator (for Activators with more than 10 spots)")

```






